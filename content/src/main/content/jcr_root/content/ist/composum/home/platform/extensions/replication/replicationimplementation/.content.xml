<?xml version="1.0" encoding="UTF-8"?>
<jcr:root xmlns:cpp="http://sling.composum.com/pages/1.0"
        xmlns:jcr="http://www.jcp.org/jcr/1.0"
        xmlns:sling="http://sling.apache.org/jcr/sling/1.0"
        jcr:primaryType="cpp:Page">
    <jcr:content
            jcr:primaryType="cpp:PageContent"
            sling:resourceType="composum/pages/components/page"
            jcr:description="Some internal remarks about the replication - not for publication."
            jcr:title="Implementation of replication - internal remarks"
            template="/apps/ist/composum/templates/page/content">
        <top
                jcr:primaryType="cpp:Container"
                sling:resourceType="composum/pages/components/container/parsys"
                parentInheritanceCancelled="{Boolean}true"/>
        <main
                jcr:primaryType="cpp:Container"
                sling:resourceType="composum/pages/components/container/parsys">
            <row_1234434852
                    jcr:primaryType="cpp:Container"
                    sling:resourceType="composum/pages/components/container/row"
                    columns="-12-"
                    title="Discussion / Decisions">
                <column-0
                        jcr:primaryType="cpp:Container"
                        sling:resourceType="composum/pages/components/container/row/column">
                    <section_31879984
                            jcr:primaryType="cpp:Container"
                            sling:resourceType="composum/pages/components/container/section"
                            jcr:title="Discussion of implementation variants">
                        <text
                                jcr:primaryType="cpp:Element"
                                sling:resourceType="composum/pages/components/element/text"
                                text="&lt;p>Ideas how to connect the servers:&lt;/p>&lt;ol>&lt;li>The publish server provides a servlet to which the author server connects during the replication of a resource&lt;/li>&lt;li>Connect the publish or editor servers' JCR as a&amp;nbsp;&lt;a href=&quot;https://jackrabbit.apache.org/jcr/components/jackrabbit-jcr-rmi.html&quot; style=&quot;background-color: rgb(255, 255, 255);&quot;>Jackrabbit remote repository&lt;/a>&amp;nbsp;on the other machine&lt;/li>&lt;li>Export packages, rsync them to the publish server and install them via shell script&lt;/li>&lt;li>Set up a kind of remote synchronisation routine between JCR trees on two machines that compares both trees.&lt;/li>&lt;/ol>&lt;p>Variant 3 probably interrupts the work of the publish server (?). Variant 2 would probably violate the independence: failures of one server will probably influence the other server, too. Problem with variant 4: it is hard to get this transactionally indent from outside changes by the editor on the editor server during the synchronisation process.&lt;/p>&lt;p>As an easy first shot: a ReleaseChangeEventListener creates zips from the changed subtree and transmits them to the publish server. The servlet there unpacks them into a separate location (comparable to the SourceUpdateService) and replaces the previous content. We need to transmit all entries in the event in one service call. This does, however, block the activation during the transmission - possibly completely when the publication server is down, and always transmits even unchanged data in the changed subtree. (That might be acceptable unless the current release is used as public release.)&lt;/p>&lt;p>Decision: variant 4 is implemented since it allows replication of even very large content trees and has the servers independent. The replicated content is saved in a temporary tree and then moved to the real content tree in one transaction.&lt;/p>"
                                title="How to connect the servers"/>
                    </section_31879984>
                </column-0>
            </row_1234434852>
            <row
                    jcr:primaryType="cpp:Container"
                    sling:resourceType="composum/pages/components/container/row"
                    columns="-12-"
                    title="Important classes">
                <column-0
                        jcr:primaryType="cpp:Container"
                        sling:resourceType="composum/pages/components/container/row/column">
                    <text
                            jcr:primaryType="cpp:Element"
                            sling:resourceType="composum/pages/components/element/text"
                            text="&lt;p>These are basically the layers the request goes through, mostly in cpm-platform-replication.&lt;/p>&lt;p>&lt;ul>&lt;li>ReleaseChangeEventPublisherImpl (platform): distributor of ReleaseChangeEvents to ReleaseChangeEventListener(s) and their ReleaseChangeProcess(-es). For a ReleaseChangeProcess the event is saved into it and 10 seconds later it's run method will be called to actually perform the publication.&lt;/li>&lt;li>RemotePublisherService (cpm-platform-replication): a ReleaseChangeEventListener that provides ReleaseChangeProcess(es) for every remote replication configuration.&lt;/li>&lt;li>RemotePublisherService.ReplicationStrategy : controls the flow of requests to the remote publication receiver and the top level of the comparison logic&lt;/li>&lt;li>RemotePublicationReceiverFacade: creates the JSON requests for the remote publication receiver, transmits them and parses the Responses&lt;/li>&lt;li>RemotePublicationReceiverServlet: servlet that provides the necessary operations on the remote system we are replicating to&lt;/li>&lt;li>RemotePublicationReceiverService: implementation for this servlet&lt;/li>&lt;/ul>&lt;/p>"
                            title="Sequence of classes involved during replication"/>
                    <text_860470971
                            jcr:primaryType="cpp:Element"
                            sling:resourceType="composum/pages/components/element/text"
                            text="&lt;p>The following paths contain data relevant for the replication. We also mention the rights the service-user composum-platform-service needs there for the replication to work.&amp;nbsp;&amp;nbsp;&lt;/p>&lt;ul>&lt;li>author: /conf/{sitepath}/replication/* : location of replication configurations. service-user: read, user: read, write&lt;/li>&lt;li>author: /content/{sitepath-/content} : location of content; service-user: read, (write???), user: read, write&lt;/li>&lt;li>author: /var/composum/content/{sitepath-/content}/cpl:releases&amp;nbsp; : Release-Information ; service-user: read, write&lt;/li>&lt;li>author: /var/composum/platform/security/credentials/{credentialpath? : the credentials needed for remote replication ; service-user: read&lt;/li>&lt;li>publisher, (author when inplace): /tmp/composum/platform/remotereceiver : temporary directory where transferred content is placed&amp;nbsp; ; service-user: read, write&lt;/li>&lt;li>publisher, (author when inplace): /(public|preview)/{sitepath-/content} : the often used location for replicated content ; service-user: read, write&lt;/li>&lt;li>publisher, (author when inplace): /var/composum/replication/{replicatedsitepath}/jcr:content : metadata for replicated content&amp;nbsp; ; service-user: read, write&lt;/li>&lt;li>author: /var/composum/replication/{confpath}/jcr:content/history : information about the last success / failure of replication&lt;/li>&lt;/ul>&lt;br>"
                            title="Relevant paths in the repository"/>
                </column-0>
            </row>
            <row_211240042
                    jcr:primaryType="cpp:Container"
                    sling:resourceType="composum/pages/components/container/row"
                    columns="-12-"
                    title="Debugging Hints">
                <column-0
                        jcr:primaryType="cpp:Container"
                        sling:resourceType="composum/pages/components/container/row/column">
                    <text
                            jcr:primaryType="cpp:Element"
                            sling:resourceType="composum/pages/components/element/text"
                            text="&lt;p>On the publisher side it's sensible to install the cpm-sites-test app package since it contains the &quot;Composum Testsites Testpages Request Logging Filter&quot; which can be configured to log requests and responses for path /bin/cpm/platform/replication.* into the logfile.&lt;/p>&lt;p>&lt;br>&lt;/p>"/>
                </column-0>
            </row_211240042>
        </main>
        <bottom
                jcr:primaryType="cpp:Container"
                sling:resourceType="composum/pages/components/container/iparsys"/>
    </jcr:content>
</jcr:root>
