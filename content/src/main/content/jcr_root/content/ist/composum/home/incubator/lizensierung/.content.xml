<?xml version="1.0" encoding="UTF-8"?>
<jcr:root xmlns:cpp="http://sling.composum.com/pages/1.0"
        xmlns:jcr="http://www.jcp.org/jcr/1.0"
        xmlns:sling="http://sling.apache.org/jcr/sling/1.0"
        jcr:primaryType="cpp:Page">
    <jcr:content
            jcr:primaryType="cpp:PageContent"
            sling:resourceType="composum/pages/components/page"
            jcr:description="Gedanken zur Lizensierung"
            jcr:title="Lizensierung"
            template="ist/composum/templates/page/content">
        <top
                jcr:primaryType="cpp:Container"
                sling:resourceType="composum/pages/components/container/parsys"/>
        <main
                jcr:primaryType="cpp:Container"
                sling:resourceType="composum/pages/components/container/parsys">
            <row
                    jcr:primaryType="cpp:Container"
                    sling:resourceType="composum/pages/components/container/row"
                    columns="-6--6-">
                <column-1
                        jcr:primaryType="cpp:Container"
                        sling:resourceType="composum/pages/components/container/row/column">
                    <text
                            jcr:primaryType="cpp:Element"
                            sling:resourceType="composum/pages/components/element/text"
                            text="&lt;p>&amp;gt;&amp;gt; USER: Wir benötigen für Composum ein Lizenzmodell, das private und nichtkommerzielle Nutzung erlaubt, aber für kommerzielle Nutzung eine Lizensierung erfordert (d.h. wo wir eine finanzielle Kompensation aushandeln würden). Am besten etwas, das von Github empfohlen wird.&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; ASSISTANT: Ein geeignetes Lizenzmodell für Composum, das private und nichtkommerzielle Nutzung erlaubt, während kommerzielle Nutzung eine Lizensierung erfordert, ist die duale Lizenzierung. Duale Lizenzierung bedeutet, dass das Produkt unter zwei verschiedenen Lizenzen angeboten wird, eine für nichtkommerzielle Nutzung und eine andere für kommerzielle Nutzung.&lt;/p>&lt;br>&lt;p>Eine mögliche Kombination für duale Lizenzierung könnte die Verwendung einer Open-Source-Lizenz für nichtkommerzielle Nutzung und einer individuell verhandelbaren Lizenz für kommerzielle Nutzung sein.&lt;/p>&lt;br>&lt;p>Für die nichtkommerzielle Nutzung könnten Sie die GNU Affero General Public License v3.0 (AGPL-3.0) in Betracht ziehen. Die AGPL-3.0 ist eine strengere Version der GPL und erfordert, dass jeglicher Code, der den lizenzierten Code verwendet oder darauf aufbaut, ebenfalls unter der AGPL-3.0-Lizenz veröffentlicht wird. Die Verwendung der AGPL-3.0 kann kommerzielle Unternehmen davon abhalten, Ihren Code ohne Lizensierung zu nutzen, da sie möglicherweise nicht bereit sind, ihren eigenen Code unter denselben Bedingungen offenzulegen.&lt;/p>&lt;br>&lt;p>Für kommerzielle Nutzung können Sie eine eigene kommerzielle Lizenz erstellen, die eine finanzielle Kompensation für die Verwendung von Composum vorsieht. Die Bedingungen dieser Lizenz können auf individueller Basis mit jedem Kunden verhandelt werden, um den spezifischen Anforderungen und Umständen gerecht zu werden.&lt;/p>&lt;br>&lt;p>Github selbst empfiehlt keine spezifischen Lizenzen für duale Lizenzierungsmodelle. Es ist jedoch wichtig, eine detaillierte Dokumentation über die angebotenen Lizenzen bereitzustellen, um potenziellen Nutzern die Wahl zwischen der Open-Source- und der kommerziellen Lizenz zu ermöglichen. Github kann zur Präsentation und Verwaltung der Lizenzen verwendet werden, indem separate Repositorys oder Branches für die verschiedenen Lizenzversionen erstellt werden.&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; USER: Was für Entscheidungskriterien siehst Du? Wir wollen Composum als Open Source haben, aber ein Türchen offenhalten, damit Geld zu verdienen.&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; ASSISTANT: Bei der Auswahl einer Lizenz für Composum, um Open Source zu bleiben und gleichzeitig die Möglichkeit zu haben, Geld zu verdienen, gibt es mehrere Entscheidungskriterien zu berücksichtigen:&lt;/p>&lt;br>&lt;p>1. **Schutz des geistigen Eigentums:** Eine Lizenz sollte sicherstellen, dass Ihr geistiges Eigentum geschützt ist und die Bedingungen für die Nutzung und Weiterverbreitung Ihres Codes klar festgelegt sind.&lt;/p>&lt;br>&lt;p>2. **Einfachheit und Verständlichkeit:** Die Lizenz sollte einfach zu verstehen und anzuwenden sein, sowohl für Sie als auch für potenzielle Nutzer und Mitwirkende.&lt;/p>&lt;br>&lt;p>3. **Kompatibilität mit anderen Lizenzen:** Die gewählte Lizenz sollte kompatibel mit anderen gängigen Open-Source-Lizenzen sein, um die Zusammenarbeit und Integration von Composum in andere Projekte zu erleichtern.&lt;/p>&lt;br>&lt;p>4. **Gemeinschaft und Akzeptanz:** Wählen Sie eine Lizenz, die von der Open-Source-Community gut angenommen wird, um die Zusammenarbeit und das Engagement von Mitwirkenden zu fördern.&lt;/p>&lt;br>&lt;p>5. **Kontrolle über die kommerzielle Nutzung:** Die Lizenz sollte es Ihnen ermöglichen, die kommerzielle Nutzung Ihres Projekts zu steuern und gegebenenfalls Gebühren für die Verwendung von Composum in kommerziellen Projekten zu erheben.&lt;/p>&lt;br>&lt;p>Unter Berücksichtigung dieser Kriterien könnte eine Kombination aus einer Copyleft-Lizenz, wie der GNU Affero General Public License v3.0 (AGPL-3.0), und einer kommerziellen Lizenz eine gute Option sein. Die AGPL-3.0 schützt Ihr geistiges Eigentum, fördert die Offenheit und verhindert, dass Unternehmen Ihr Projekt ohne Offenlegung ihres eigenen Codes kommerziell nutzen. Gleichzeitig können Sie eine kommerzielle Lizenz für Unternehmen anbieten, die Ihren Code nutzen möchten, ohne ihre eigenen Entwicklungen offenzulegen. Dadurch erhalten Sie die Möglichkeit, Gebühren für die kommerzielle Nutzung von Composum zu erheben.&lt;/p>&lt;br>&lt;p>Es ist wichtig, die spezifischen Bedingungen und Anforderungen der verschiedenen Open-Source-Lizenzen sorgfältig zu prüfen, um die am besten geeignete für Ihre Bedürfnisse und Ziele auszuwählen. Eine gründliche Analyse der Lizenzoptionen hilft Ihnen, eine informierte Entscheidung zu treffen und sicherzustellen, dass Composum sowohl der Open-Source-Community zugutekommt als auch das Potenzial für eine finanzielle Kompensation bei kommerzieller Nutzung bietet.&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; USER: Hast Du Beispiele für populäre Projekte mit dualer Lizensierung?&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; ASSISTANT: Ja, es gibt mehrere populäre Projekte, die duale Lizenzierung erfolgreich implementiert haben. Hier sind einige Beispiele:&lt;/p>&lt;br>&lt;p>1. **MySQL:** MySQL, ein weit verbreitetes relationales Datenbanksystem, bietet eine duale Lizenzierung. Für Open-Source- und nichtkommerzielle Projekte steht MySQL unter der GNU General Public License (GPL) zur Verfügung. Für kommerzielle Projekte bietet Oracle, das Unternehmen hinter MySQL, eine kommerzielle Lizenz an, die einen kostenpflichtigen Support und zusätzliche Funktionen umfasst.&lt;/p>&lt;br>&lt;p>2. **Qt:** Qt ist ein plattformübergreifendes Anwendungs- und UI-Framework, das ebenfalls eine duale Lizenzierung verwendet. Die Open-Source-Version von Qt ist unter der GNU Lesser General Public License (LGPL) und der GNU General Public License (GPL) verfügbar. Die kommerzielle Version von Qt, die von The Qt Company vertrieben wird, bietet zusätzliche Funktionen, Support und Flexibilität bei der Lizenzierung.&lt;/p>&lt;br>&lt;p>3. **MariaDB:** MariaDB ist eine weitere relationale Datenbank, die als Abspaltung von MySQL entwickelt wurde. MariaDB verwendet eine duale Lizenzierung, wobei die Open-Source-Version unter der GNU General Public License (GPL) angeboten wird. Für kommerzielle Zwecke bietet MariaDB Corporation eine kommerzielle Lizenz an, die kommerzielle Support- und Servicevereinbarungen beinhaltet.&lt;/p>&lt;br>&lt;p>4. **ZeroMQ:** ZeroMQ ist eine High-Performance-Messaging-Bibliothek, die duale Lizenzierung einsetzt. Die Open-Source-Version wird unter der GNU Lesser General Public License (LGPL) und der Mozilla Public License (MPL) angeboten. Für kommerzielle Nutzung bietet iMatix Corporation, das Unternehmen hinter ZeroMQ, eine kommerzielle Lizenz an.&lt;/p>&lt;br>&lt;p>5. **Ext JS:** Ext JS ist ein JavaScript-Framework für die Entwicklung von Webanwendungen, das von Sencha entwickelt wurde. Das Framework steht unter einer dualen Lizenz, wobei die Open-Source-Version unter der GNU General Public License (GPL) verfügbar ist. Sencha bietet auch eine kommerzielle Lizenz für Ext JS an, die zusätzliche Tools und Support beinhaltet.&lt;/p>&lt;br>&lt;p>Diese Beispiele zeigen, dass duale Lizenzierung in verschiedenen Branchen und Anwendungsfällen erfolgreich eingesetzt werden kann, um sowohl Open-Source-Prinzipien zu fördern als auch kommerzielle Interessen zu wahren.&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; USER: Kann man für eine duale Lizenz trotzdem das selbe Git Repository verwenden? Du schlugst vorhin vor, zwei Repositories - eins für nichtkommerziell, eins für kommerziell - zu verwenden, was ziemlich unangenehm wäre. Gäbe es P&lt;/p>&lt;p>robleme dabei?&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; ASSISTANT: Entschuldigung für das Missverständnis. Tatsächlich ist es möglich, dieselbe Git-Repository für beide Lizenzen zu verwenden, und es ist üblich, dass dual-lizenzierte Projekte dies tun.&lt;/p>&lt;br>&lt;p>Anstelle von getrennten Repositories können Sie einfach beide Lizenzen im selben Repository unterbringen und klar angeben, welche Lizenz für welche Nutzungszwecke gilt. In der Regel enthält das Repository eine Datei namens &quot;LICENSE&quot; oder &quot;COPYING&quot;, die die Bedingungen der Open-Source-Lizenz beschreibt. Für die kommerzielle Lizenz können Sie eine separate Datei wie &quot;COMMERCIAL_LICENSE&quot; erstellen und auf die Bedingungen für die kommerzielle Nutzung verweisen.&lt;/p>&lt;br>&lt;p>Es ist wichtig, eine klare Trennung der Lizenzen in der Dokumentation und den Nutzungsbedingungen zu gewährleisten, damit potenzielle Nutzer und Mitwirkende wissen, welche Lizenz für ihre jeweilige Nutzung gilt.&lt;/p>&lt;br>&lt;p>Die Verwendung eines einzigen Git-Repository für beide Lizenzen hat den Vorteil, dass die Codebasis leichter zu verwalten ist, da Änderungen und Verbesserungen sowohl für die Open-Source- als auch für die kommerzielle Version des Projekts gelten. Dadurch wird vermieden, dass separate Codebasen gepflegt werden müssen, und es wird sichergestellt, dass beide Versionen von Composum konsistent und synchron bleiben.&lt;/p>&lt;br>&lt;p>Solange Sie eine klare Trennung der Lizenzen in der Dokumentation und den Nutzungsbedingungen aufrechterhalten und die Bedingungen für die kommerzielle Nutzung klar festlegen, sollte die Verwendung eines einzigen Git-Repository für beide Lizenzen keine rechtlichen Probleme oder Verwaltungsschwierigkeiten verursachen.&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; USER: Was gibt es in Bezug auf externe Contributionen zu beachten - sprich: wenn jemand über einen PR zum Code beitragen möchte? Es geht mir nur um Modifikationen an unserem Code und Ergänzungen daran, nicht um ganze Projekte.&lt;/p>&lt;p>Was muss man da grundsätzlich beachten? Wenn wir dafür offen sein wollen, hat das Wechselwirkungen mit der&lt;/p>&lt;p>Lizenzauswahl?&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; ASSISTANT: Wenn externe Mitwirkende über Pull Requests (PRs) zum Code beitragen möchten, gibt es einige wichtige Aspekte zu beachten. Diese Aspekte können Wechselwirkungen mit der Lizenzauswahl haben und sollten berücksichtigt werden, um rechtliche und organisatorische Herausforderungen zu vermeiden:&lt;/p>&lt;br>&lt;p>1. **Beitragendenvereinbarung (Contributor License Agreement, CLA):** Um rechtliche Fragen bezüglich der Codebeiträge von Dritten zu klären, sollten Sie eine Beitragendenvereinbarung einführen. Die Mitwirkenden müssen diese Vereinbarung unterzeichnen, bevor ihre PRs akzeptiert werden. Eine CLA legt fest, dass der Mitwirkende die notwendigen Rechte an seinem Beitrag besitzt und Ihnen die Erlaubnis erteilt, seinen Beitrag unter den gewählten Lizenzen zu verwenden und zu verteilen.&lt;/p>&lt;br>&lt;p>2. **Richtlinien für Mitwirkende:** Erstellen Sie Richtlinien für Mitwirkende, die klar darlegen, wie sie am Projekt teilnehmen können, welche Art von Beiträgen erwünscht sind und wie sie ihre Beiträge einreichen sollten. Diese Richtlinien können auch Informationen über die erwarteten Verhaltensweisen, den Umgang mit Bugs und Feature-Anfragen sowie den allgemeinen Entwicklungsprozess enthalten.&lt;/p>&lt;br>&lt;p>3. **Lizenzkompatibilität:** Die gewählte Lizenz hat Auswirkungen auf die Bedingungen, unter denen externe Beiträge akzeptiert werden können. Stellen Sie sicher, dass die Mitwirkenden ihre Beiträge unter einer Lizenz bereitstellen, die mit der Lizenz Ihres Projekts kompatibel ist. Bei Copyleft-Lizenzen wie der AGPL-3.0 müssen die Beiträge der Mitwirkenden ebenfalls unter denselben Bedingungen lizenziert werden.&lt;/p>&lt;br>&lt;p>4. **Code-Review und Qualitätskontrolle:** Um die Qualität und Sicherheit des Codes zu gewährleisten, sollten Sie jeden PR sorgfältig prüfen, bevor Sie ihn in das Hauptrepository integrieren. Implementieren Sie einen systematischen Code-Review-Prozess, um sicherzustellen, dass die Beiträge den Projektstandards entsprechen und keine rechtlichen oder technischen Probleme verursachen.&lt;/p>&lt;br>&lt;p>5. **Kommunikation:** Ermutigen Sie die Zusammenarbeit und Kommunikation zwischen den Mitwirkenden und dem Kernteam, um ein offenes und inklusives Umfeld zu schaffen. Dies kann dazu beitragen, ein besseres Verständnis der Projektziele und -richtlinien zu fördern und Missverständnisse oder Konflikte zu minimieren.&lt;/p>&lt;br>&lt;p>Die Auswahl einer geeigneten Lizenz kann die Zusammenarbeit mit externen Mitwirkenden erleichtern und das Projekt für Beiträge aus der Community öffnen. Bei einer duale Lizenzierung mit einer Copyleft-Lizenz wie der AGPL-3.0 können Sie sicherstellen, dass externe Beiträge den Open-Source-Prinzipien entsprechen und kommerzielle Interessen gewahrt bleiben. Unabhängig von der gewählten Lizenz ist es wichtig, klare Richtlinien und Prozesse für Mitwirkende zu etablieren, um einen reibungslosen und effektiven Entwicklungsprozess zu gewährleisten.&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; USER: Das einfachste wäre vielleicht, wenn wir den Beitragenden dazu bringen könnten, uns die Rechte an seinem Beitrag zu überlassen?&lt;/p>&lt;br>&lt;p>&amp;gt;&amp;gt; ASSISTANT: Eine Möglichkeit, die Rechte an den Beiträgen von externen Mitwirkenden zu erhalten, besteht darin, eine Beitragendenvereinbarung (Contributor License Agreement, CLA) oder eine Beitragsübertragungsvereinbarung (Contributor Assignment Agreement, CAA) einzuführen. Mit diesen Vereinbarungen können Sie die erforderlichen Rechte an den Beiträgen der Mitwirkenden sichern, um sie in Ihrem Projekt zu verwenden und zu verteilen.&lt;/p>&lt;br>&lt;p>1. **Contributor License Agreement (CLA):** Eine CLA legt fest, dass der Mitwirkende die notwendigen Rechte an seinem Beitrag besitzt und Ihnen die Erlaubnis erteilt, seinen Beitrag unter den gewählten Lizenzen zu verwenden und zu verteilen. Der Mitwirkende behält das Urheberrecht an seinem Beitrag, gewährt Ihnen jedoch eine Lizenz, die es Ihnen ermöglicht, seinen Beitrag in Ihrem Projekt zu verwenden und weiterzugeben. Eine CLA kann sowohl für die Open-Source-Lizenz als auch für die kommerzielle Lizenz gelten.&lt;/p>&lt;br>&lt;p>2. **Contributor Assignment Agreement (CAA):** Eine CAA ist eine rechtliche Vereinbarung, bei der der Mitwirkende das Urheberrecht an seinem Beitrag an Sie oder Ihr Unternehmen abtritt. Dadurch erhalten Sie das vollständige Eigentum an dem Beitrag und können ihn in Ihrem Projekt verwenden und verteilen, wie Sie es für richtig halten. CAAs sind restriktiver als CLAs und können weniger attraktiv für potenzielle Mitwirkende sein, da sie die Kontrolle über ihre Beiträge verlieren.&lt;/p>&lt;br>&lt;p>Es ist wichtig, die Bedingungen der jeweiligen Vereinbarung klar zu kommunizieren und sicherzustellen, dass die Mitwirkenden diese Vereinbarungen verstehen und akzeptieren, bevor ihre Beiträge in das Projekt aufgenommen werden. Beachten Sie, dass einige potenzielle Mitwirkende möglicherweise zögern, ihre Rechte an ihren Beiträgen vollständig abzutreten oder einer restriktiven Vereinbarung zuzustimmen, was die Beteiligung an Ihrem Projekt beeinträchtigen könnte. In solchen Fällen kann eine CLA eine ausgewogenere Lösung sein, die Ihnen die erforderlichen Rechte gewährt, ohne das Urheberrecht der Mitwirkenden zu beeinträchtigen.&lt;/p>"
                            title="Diskussion mit ChatGPL"/>
                </column-1>
                <column-0
                        jcr:primaryType="cpp:Container"
                        sling:resourceType="composum/pages/components/container/row/column">
                    <section
                            jcr:primaryType="cpp:Container"
                            sling:resourceType="composum/pages/components/container/section"
                            jcr:title="Grundlegende Entscheidungen">
                        <text
                                jcr:primaryType="cpp:Element"
                                sling:resourceType="composum/pages/components/element/text"
                                text="&lt;p>(HPS): Vor allem steht hier erst einmal grundlegend die Frage was Du in Punkto Geld erreichen willst. Da gäbe es ja mindestens zwei Möglichkeiten:&lt;/p>&lt;p>Wir geben die Software mit einer permissiven Lizenz grundsätzlich zum Einsatz frei, und hoffen dass uns jemand bezahlt das Projekt als der offensichtliche Konsultant für Support, Anpassungen / Weiterentwicklungen und Fehlerbehebung. (Was die Chancen vielleicht erhöht, dass das von Leuten benutzt wird, aber den Part könnte natürlich langfristig dann auch jemand firmenfremdes übernehmen.)&lt;/p>&lt;p>Wir versuchen ein Lizenzmodell zu finden, dass private / nichtkommerzielle Nutzung frei gibt, aber die Leute zwingt mit uns zu verhandeln, wenn sie das kommerziell einsetzen wollen. Das würde (laut ChatGPT :slightly_smiling_face:) vermutlich auf eine duale Lizenz hinauslaufen: Lizensierung mit einer für kommerzielle Nutzung unangenehmen Lizenz, und einer Alternativlizenz für kommerzielle Nutzung, was natürlich schwieriger zu managen ist.&lt;/p>&lt;p>Hast Du da schon eine Meinung, oder weitere Kriterien, die den Suchraum etwas einengen?&lt;/p>"
                                title="Hps 1"/>
                    </section>
                </column-0>
            </row>
        </main>
        <bottom
                jcr:primaryType="cpp:Container"
                sling:resourceType="composum/pages/components/container/iparsys"/>
    </jcr:content>
</jcr:root>
